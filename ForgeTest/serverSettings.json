{
  "jar": "minecraft_server.1.12.2.jar",
  "minRamAllocation": "2G",
  "maxRamAllocation": "2G",
  "serverStartVars": [
    "-server",
    "-XX:+UseG1GC",
    "-Dsun.rmi.dgc.server.gcInterval=2147483646",
    "-XX:+UnlockExperimentalVMOptions",
    "-XX:MaxGCPauseMillis=50",
    "-XX:+DisableExplicitGC",
    "-XX:TargetSurvivorRatio=90",
    "-XX:G1NewSizePercent=30",
    "-XX:G1HeapRegionSize=32M",
    "-XX:G1MaxNewSizePercent=80",
    "-XX:G1MixedGCLiveThresholdPercent=35",
    "-XX:+ParallelRefProcEnabled",
    "-XX:ParallelGCThreads=8",
    "-XX:ConcGCThreads=8"
  ],
  "serverPostfixVars": [
    "nogui",
    "-Dfml.queryResult=confirm",
    "-Dfml.readTimeout=180"
  ],
  "modulesDir": "../",
  "modules": {
    "mineapi": {
      "file": "mineapi.js",
      "enabled": true,
      "persistent": false,
      "color": "orange",
      "import": false,
      "description": "Interfaces mojangs api's.",
      "settings": {}
    },
    "nbt": {
      "file": "nbt.js",
      "enabled": true,
      "persistent": false,
      "color": "yellow",
      "import": false,
      "description": "Gives the server data files the good touch.",
      "settings": {}
    },
    "math": {
      "file": "math.js",
      "enabled": true,
      "persistent": false,
      "color": "brightMagenta",
      "import": false,
      "description": "Handles advaced math problems.",
      "settings": {}
    },
    "stats": {
      "file": "stats.js",
      "enabled": true,
      "persistent": false,
      "color": "brightYellow",
      "import": false,
      "description": "Displays server stats on console window.",
      "settings": {
        "pollRate": 2000
      }
    },
    "util": {
      "file": "util.js",
      "enabled": true,
      "persistent": false,
      "color": "magenta",
      "import": false,
      "description": "A home for commands with no home.",
      "settings": {}
    },
    "command": {
      "file": "command.js",
      "enabled": true,
      "persistent": true,
      "color": "brightGreen",
      "import": false,
      "description": "Handles all commands.",
      "settings": {}
    },
    "properties": {
      "file": "properties.js",
      "enabled": true,
      "persistent": false,
      "color": "cyan",
      "import": false,
      "description": "Reads server.properties info.",
      "settings": {}
    },
    "color": {
      "file": "color.js",
      "enabled": true,
      "persistent": false,
      "color": "brightBlack",
      "import": false,
      "description": "Deals with getting image colors.",
      "settings": {}
    },
    "spookAPI": {
      "file": "spookAPI.js",
      "enabled": false,
      "persistent": false,
      "color": "brightCyan",
      "import": false,
      "description": "Interfaces spooky api's.",
      "settings": {
        "spookREST": "http://spookelton.net:43333"
      }
    },
    "discord": {
      "file": "discord.js",
      "enabled": true,
      "persistent": false,
      "color": "brightBlue",
      "discordColor": "discordBlue",
      "import": false,
      "description": "Handles all things discord.",
      "settings": {
        "messageFlushRate": 100,
        "discordToken": "NDg3ODExOTkwNTMwNTU1OTA0.XSQ-uQ.0lUQcpbDT2la13756Tf65iijgrs",
        "managementChannels": [
          "475502976656736257"
        ],
        "chatLink": {
          "channelId": "614637977502744576",
          "discordToMCFormat": [
            {
              "text": "@",
              "color": "blue"
            },
            {
              "text": "%username% ",
              "color": "gray"
            },
            {
              "text": "%message%",
              "color": "white"
            }
          ]
        }
      }
    },
    "backup": {
      "file": "backup.js",
      "enabled": true,
      "persistent": false,
      "color": "brightRed",
      "import": false,
      "description": "Runs server backups.",
      "settings": {
        "_INFO": "To allow remote backups you must run: 'npm install -g rsync-snapshot', 'ssh-keygen' and then 'ssh-copy-id username@remote_ip' to generate the login credentials.",
        "messages": {
          "backupStarting": {
            "console": "Starting Backup - World Saving Disabled",
            "minecraft": "title @a actionbar ['',{'text':'~','color':'light_purple'},{'text':' Starting Backup','color':'white'},{'text':' ~','color':'light_purple'}]"
          },
          "backupEnded": {
            "console": "Backup Completed in %duration% - World Saving Enabled",
            "minecraft": "title @a actionbar ['',{'text':'~','color':'light_purple'},{'text':' Finished Backup','color':'white'},{'text':' -','color':'light_purple'},{'text':' Took','color':'white'},{'text':' %duration%','color':'green'},{'text':' ~','color':'light_purple'}]"
          }
        },
        "publicBackupFolders": [
          "WORLD",
          "config"
        ],
        "excludes": [
          "*.zip*",
          "*.log*",
          "*.rar*",
          "*.dmp*",
          "*.phd*"
        ],
        "remote": {
          "user": "administrator",
          "ip": "11.0.0.5",
          "port": "22",
          "publicBackupDir": "/mnt/redlive/PublicFTP/LiveArchives",
          "rootBackupDir": "/mnt/redlive/LiveArchives",
          "overrideBackupDir": ""
        },
        "backupIntervalInHours": 0.5,
        "threads": 1,
        "maxBackups": 10000
      }
    },
    "auth": {
      "file": "auth.js",
      "enabled": true,
      "persistent": false,
      "color": "white",
      "import": false,
      "description": "Handles all permissions.",
      "settings": {
        "whitelisted_discord_roles": {
          "344286675691896832": {
            "Name": "Mods",
            "allowedCommands": {
              "*": {
                "assignedAt": "2019-03-25T06:49:08.684Z",
                "assignedBy": {
                  "Username": "Sir Inrix | <3",
                  "discord_id": "155530711326130176"
                },
                "expiresAt": false,
                "expired": false
              }
            }
          }
        },
        "whitelisted_discord_users": {
          "155530711326130176": {
            "Username": "Sir Inrix | <3",
            "allowedCommands": {
              "~cw_add": {
                "assignedAt": "2019-03-24T05:58:04.891Z",
                "assignedBy": {
                  "Username": "Sir Inrix | <3",
                  "discord_id": "155530711326130176"
                },
                "expiresAt": false,
                "expired": false
              },
              "~cw_remove": {
                "assignedAt": "2019-03-24T05:58:19.998Z",
                "assignedBy": {
                  "Username": "Sir Inrix | <3",
                  "discord_id": "155530711326130176"
                },
                "expiresAt": false,
                "expired": false
              },
              "*": {
                "assignedAt": "2019-03-25T06:49:08.684Z",
                "assignedBy": {
                  "Username": "Sir Inrix | <3",
                  "discord_id": "155530711326130176"
                },
                "expiresAt": false,
                "expired": false
              },
              "!list": {
                "assignedAt": "2019-07-13T11:32:17.482Z",
                "assignedBy": {
                  "Username": "Sir Inrix | <3",
                  "discord_id": "155530711326130176"
                },
                "expiresAt": "2019-07-13T11:33:29.482Z",
                "expired": false
              },
              "!kill": {
                "assignedAt": "2019-07-13T12:18:44.125Z",
                "assignedBy": {
                  "Username": "Sir Inrix | <3",
                  "discord_id": "155530711326130176"
                },
                "expiresAt": "2019-07-13T12:19:56.124Z",
                "expired": false
              }
            },
            "allowAllCommands": false
          }
        }
      }
    },
    "event": {
      "file": "event.js",
      "enabled": true,
      "persistent": false,
      "color": "brightRed",
      "import": false,
      "description": "Handles server events.",
      "settings": {
        "eventTranslation": {
          "Started": {
            "match": "serverStarted",
            "text": "**Server Started**",
            "embed": {
              "description": "**Server Started**"
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "Stopping": {
            "match": "Stopping the server",
            "text": "**Server stopping...**",
            "embed": {
              "description": "**Server stopping...**"
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "CrashHang": {
            "match": "A single server tick took %seconds% seconds",
            "text": "@Mods **Server crashed, a single tick took more than a minute**",
            "embed": {
              "description": "@Mods **Server crashed, a single tick took more than a minute**"
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "CrashTicking": {
            "match": "Encountered an unexpected exception net.minecraft.util.ReportedException: Ticking",
            "text": "@Mods **Server crashed, reason: Ticking entity",
            "embed": {
              "description": "@Mods **Server crashed, reason: Ticking entity**"
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "CrashTickingWorldEntity": {
            "match": "Encountered an unexpected exception net.minecraft.util.ReportedException: Exception ticking world entities",
            "text": "@Mods **Server crashed, reason: Ticking world entities",
            "embed": {
              "description": "@Mods **Server crashed, reason: Ticking world entities**"
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "PlayerMessage": {
            "match": "<%username%> %message%",
            "text": "**<%username%>** %message%",
            "embed": {
              "description": "%message%",
              "author": {
                "name": "%username%",
                "icon_url": "%username% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "PlayerJoined": {
            "match": "%username% joined the game",
            "text": "**<%username%>** joined the server!",
            "embed": {
              "description": "**%username%** joined the game!",
              "author": {
                "name": "%username%",
                "icon_url": "%username% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "PlayerLeft": {
            "match": "%username% left the game",
            "text": "**<%username%>** left the server!",
            "embed": {
              "description": "**%username%** left the game!",
              "author": {
                "name": "%username%",
                "icon_url": "%username% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "PlayerAdvancement": {
            "match": "%username% has made the advancement %advancement%",
            "text": "**<%username%>** gained the achievement **%advancement%**!",
            "embed": {
              "description": "Made the advancement **%advancement%**",
              "author": {
                "name": "%username%"
              },
              "thumbnail": {
                "url": "%username% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "PlayerGoal": {
            "match": "%username% has reached the goal %goal%",
            "text": "**<%username%>** reached the goal **%goal%**!",
            "embed": {
              "description": "Reached the goal **%goal%**",
              "author": {
                "name": "%username%"
              },
              "thumbnail": {
                "url": "%username% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "PlayerChallenge": {
            "match": "%username% has completed the challenge %challenge%",
            "text": "**<%username%>** has completed the challenge **%challenge%**!",
            "embed": {
              "description": "Completed the challenge **%challenge%**",
              "author": {
                "name": "%username%"
              },
              "thumbnail": {
                "url": "%username% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "KilledInFire": {
            "match": "%entity% went up in flames",
            "text": "**<%entity%>** went up in flames",
            "embed": {
              "author": {
                "name": "%entity% went up in flames",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "DiedOnFire": {
            "match": "%entity% burned to death",
            "text": "**<%entity%>** burned to death",
            "embed": {
              "author": {
                "name": "%entity% burned to death",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "DiedInLava": {
            "match": "%entity% tried to swim in lava",
            "text": "**<%entity%>** tried to swim in lava",
            "embed": {
              "author": {
                "name": "%entity% tried to swim in lava",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "DiedInWall": {
            "match": "%entity% suffocated in a wall",
            "text": "**<%entity%>** suffocated in a wall",
            "embed": {
              "author": {
                "name": "%entity% suffocated in a wall",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "Drowned": {
            "match": "%entity% drowned",
            "text": "**<%entity%>** drowned",
            "embed": {
              "author": {
                "name": "%entity% drowned",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "DrownedEscaping": {
            "match": "%entityA% drowned whilst trying to escape %entityB%",
            "text": "**<%entityA%>** drowned whilst trying to escape **<%entityB%>**",
            "embed": {
              "author": {
                "name": "%entityA% drowned whilst trying to escape %entityB%",
                "icon_url": "%entityA% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "Starved": {
            "match": "%entity% starved to death",
            "text": "**<%entity%>** starved to death",
            "embed": {
              "author": {
                "name": "%entity% starved to death",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "Pricked": {
            "match": "%entity% was pricked to death",
            "text": "**<%entity%>** was pricked to death",
            "embed": {
              "author": {
                "name": "%entity% was pricked to death",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "HuggedACactus": {
            "match": "%entity% hugged a cactus",
            "text": "**<%entity%>** hugged a cactus",
            "embed": {
              "author": {
                "name": "%entity% hugged a cactus",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "WalkedIntoCactus": {
            "match": "%entityA% walked into a cactus while trying to escape %entityB%",
            "text": "**<%entity%>** walked into a cactus while trying to escape **<%entityB%>**",
            "embed": {
              "author": {
                "name": "%entityA% walked into a cactus while trying to escape %entityB%",
                "icon_url": "%entityA% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "HitTheGroundTooHard": {
            "match": "%entity% hit the ground too hard",
            "text": "**<%entity%>** hit the ground too hard",
            "embed": {
              "author": {
                "name": "%entity% hit the ground too hard",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "DiedOutOfWorld": {
            "match": "%entity% fell out of the world",
            "text": "**<%entity%>** fell out of the world",
            "embed": {
              "author": {
                "name": "%entity% fell out of the world",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "Died": {
            "match": "%entity% died",
            "text": "**<%entity%>** died",
            "embed": {
              "author": {
                "name": "%entity% died",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "Exploded": {
            "match": "%entity% blew up",
            "text": "**<%entity%>** blew up",
            "embed": {
              "author": {
                "name": "%entity% blew up",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "ExplodedBy": {
            "match": "%entityA% was blown up by %entityB%",
            "text": "**<%entityA%>** was blown up by **<%entityB%>**",
            "embed": {
              "author": {
                "name": "%entityA% was blown up by %entityB%",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "KilledByMagic": {
            "match": "%entity% was killed by magic",
            "text": "**<%entity%>** was killed by magic",
            "embed": {
              "author": {
                "name": "%entity% was killed by magic",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "SlainBy": {
            "match": "%entityA% was slain by %entityB%",
            "text": "**<%entityA%>** was slain by **%entityB%**",
            "embed": {
              "author": {
                "name": "%entityA% was slain by %entityB%",
                "icon_url": "%entityA% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "ShotBy": {
            "match": "%entityA% was shot by %entityB%",
            "text": "**<%entityA%>** was shot by **%entityB%**",
            "embed": {
              "author": {
                "name": "%entityA% was shot by %entityB%",
                "icon_url": "%entityA% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "ShotByUsing": {
            "match": "%entityA% was shot by %entityB% using %bowName%",
            "text": "**<%entityA%>** was shot by **%entityB% using %bowName%**",
            "embed": {
              "author": {
                "name": "%entityA% was shot by %entityB% using %bowName%",
                "icon_url": "%entityA% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "FireballedBy": {
            "match": "%entityA% was fireballed by %entityB%",
            "text": "**<%entityA%>** was fireballed by **%entityB%**",
            "embed": {
              "author": {
                "name": "%entityA% was fireballed by %entityB%",
                "icon_url": "%entityA% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "PummeledBy": {
            "match": "%entityA% was pummeled by %entityB%",
            "text": "**<%entityA%>** was pummeled by **%entityB%**",
            "embed": {
              "author": {
                "name": "%entityA% was pummeled by %entityB%",
                "icon_url": "%entityA% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "KilledBy": {
            "match": "%entityA% was killed by %entityB%",
            "text": "**<%entityA%>** was killed by **%entityB%**",
            "embed": {
              "author": {
                "name": "%entityA% was killed by %entityB%",
                "icon_url": "%entityA% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "ElytraCrashed": {
            "match": "%entity% experienced kinetic energy",
            "text": "**<%entity%>** experienced kinetic energy",
            "embed": {
              "author": {
                "name": "%entity% experienced kinetic energy",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "FellFromHighPlace": {
            "match": "%entity% fell from a high place",
            "text": "**<%entity%>** fell from a high place",
            "embed": {
              "author": {
                "name": "%entity% fell from a high place",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "FellFromLadder": {
            "match": "%entity% fell off a ladder",
            "text": "**<%entity%>** fell off a ladder",
            "embed": {
              "author": {
                "name": "%entity% fell off a ladder",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "FellFromVines": {
            "match": "%entity% fell off some vines",
            "text": "**<%entity%>** fell off some vines",
            "embed": {
              "author": {
                "name": "%entity% fell off some vines",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "FellOutOfWater": {
            "match": "%entity% fell out of the water",
            "text": "**<%entity%>** out of the water",
            "embed": {
              "author": {
                "name": "%entity% fell out of the water",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "FellIntoFire": {
            "match": "%entity% fell into a patch of fire",
            "text": "**<%entity%>** fell into a patch of fire",
            "embed": {
              "author": {
                "name": "%entity% fell into a patch of fire",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "FellIntoCacti": {
            "match": "%entity% fell into a patch of cacti",
            "text": "**<%entity%>** fell into a patch of cacti",
            "embed": {
              "author": {
                "name": "%entity% fell into a patch of cacti",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "DoomedToFall": {
            "match": "%entityA% was doomed to fall by %entityB%",
            "text": "**<%entityA%>** was doomed to fall by %entityB%",
            "embed": {
              "author": {
                "name": "%entityA% was doomed to fall by %entityB%",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "ShootOffVines": {
            "match": "%entityA% was shot off some vines by %entityB%",
            "text": "**<%entityA%>** was shot off some vines by %entityB%",
            "embed": {
              "author": {
                "name": "%entityA% was shot off some vines by %entityB%",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "BlownFromHigh": {
            "match": "%entityA% was blown from a high place by %entityB%",
            "text": "**<%entityA%>** was blown from a high place by %entityB%",
            "embed": {
              "author": {
                "name": "%entityA% was blown from a high place by %entityB%",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "SquashedByAnvil": {
            "match": "%entityA% was squashed by a falling anvil",
            "text": "**<%entityA%>** was squashed by a falling anvil",
            "embed": {
              "author": {
                "name": "%entityA% was squashed by a falling anvil",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "SquashedByBlock": {
            "match": "%entityA% was squashed by a falling block",
            "text": "**<%entityA%>** was squashed by a falling block",
            "embed": {
              "author": {
                "name": "%entityA% was squashed by a falling block",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          },
          "ElytraKilled": {
            "match": "%entity% removed an elytra while flying",
            "text": "**<%entity%>** removed an elytra while flying",
            "embed": {
              "author": {
                "name": "%entity% removed an elytra while flying",
                "icon_url": "%entity% image"
              }
            },
            "send": {
              "embed": true,
              "text": true
            }
          }
        }
      }
    }
  },
  "c": {
    "reset": {
      "c": "\u001b[0m",
      "h": "",
      "m": "white",
      "mc": "§r"
    },
    "black": {
      "c": "\u001b[30;1m",
      "h": "000000",
      "m": "black",
      "mc": "§0"
    },
    "red": {
      "c": "\u001b[31;1m",
      "h": "800000",
      "m": "dark_red",
      "mc": "§4"
    },
    "green": {
      "c": "\u001b[32;1m",
      "h": "008000",
      "m": "dark_green",
      "mc": "§2"
    },
    "yellow": {
      "c": "\u001b[33;1m",
      "h": "808000",
      "m": "gold",
      "mc": "§6"
    },
    "blue": {
      "c": "\u001b[34;1m",
      "h": "000080",
      "m": "dark_blue",
      "mc": "§1"
    },
    "magenta": {
      "c": "\u001b[35;1m",
      "h": "800080",
      "m": "dark_purple",
      "mc": "§5"
    },
    "cyan": {
      "c": "\u001b[36;1m",
      "h": "008080",
      "m": "dark_aqua",
      "mc": "§3"
    },
    "white": {
      "c": "\u001b[37;1m",
      "h": "c0c0c0",
      "m": "gray",
      "mc": "§7"
    },
    "brightBlack": {
      "c": "\u001b[90;1m",
      "h": "808080",
      "m": "dark_gray",
      "mc": "§8"
    },
    "brightRed": {
      "c": "\u001b[91;1m",
      "h": "ff0000",
      "m": "red",
      "mc": "§c"
    },
    "brightGreen": {
      "c": "\u001b[92;1m",
      "h": "00ff00",
      "m": "green",
      "mc": "§a"
    },
    "brightYellow": {
      "c": "\u001b[93;1m",
      "h": "ffff00",
      "m": "yellow",
      "mc": "§e"
    },
    "brightBlue": {
      "c": "\u001b[94;1m",
      "h": "0000ff",
      "m": "blue",
      "mc": "§9"
    },
    "brightMagenta": {
      "c": "\u001b[95;1m",
      "h": "ff00ff",
      "m": "light_purple",
      "mc": "§d"
    },
    "brightCyan": {
      "c": "\u001b[96;1m",
      "h": "00ffff",
      "m": "aqua",
      "mc": "§b"
    },
    "brightWhite": {
      "c": "\u001b[97;1m",
      "h": "ffffff",
      "m": "white",
      "mc": "§f"
    },
    "discordBlue": {
      "c": "",
      "h": "7289da",
      "m": "",
      "mc": ""
    },
    "orange": {
      "c": "\u001b[38;5;208m",
      "h": "e77c02",
      "m": "",
      "mc": ""
    }
  },
  "server_dir": "C:\\Users\\Mikael\\Spookelton wrapper\\ForgeTest",
  "serverName": "ForgeTest",
  "lastStartTime": 10810
}